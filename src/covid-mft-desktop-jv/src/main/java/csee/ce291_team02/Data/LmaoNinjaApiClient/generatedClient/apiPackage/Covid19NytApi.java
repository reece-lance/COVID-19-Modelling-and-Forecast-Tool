/*
 * disease.sh Docs - An open API for disease-related statistics
 * Third Party API for reliable global disease information
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.apiPackage;

import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiCallback;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiClient;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiException;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiResponse;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.Configuration;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.Pair;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ProgressRequestBody;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidNYTCounty;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidNYTState;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidNYTUSA;

import java.lang.reflect.Type;

public class Covid19NytApi {
    private ApiClient apiClient;

    public Covid19NytApi() {
        this(Configuration.getDefaultApiClient());
    }

    public Covid19NytApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for v3Covid19NytCountiesCountyGet
     * @param county County name(s), separated by commas (e.g. &#x27;Alameda, Humboldt&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytCountiesCountyGetCall(String county, String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/nyt/counties/{county}"
            .replaceAll("\\{" + "county" + "\\}", apiClient.escapeString(county.toString()));

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (lastdays != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lastdays", lastdays));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19NytCountiesCountyGetValidateBeforeCall(String county, String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'county' is set
        if (county == null) {
            throw new ApiException("Missing the required parameter 'county' when calling v3Covid19NytCountiesCountyGet(Async)");
        }
        
        com.squareup.okhttp.Call call = v3Covid19NytCountiesCountyGetCall(county, lastdays, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 time series data for a county or set of counties, with an entry for each day since the pandemic began
     * 
     * @param county County name(s), separated by commas (e.g. &#x27;Alameda, Humboldt&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return CovidNYTCounty
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidNYTCounty v3Covid19NytCountiesCountyGet(String county, String lastdays) throws ApiException {
        ApiResponse<CovidNYTCounty> resp = v3Covid19NytCountiesCountyGetWithHttpInfo(county, lastdays);
        return resp.getData();
    }

    /**
     * Get COVID-19 time series data for a county or set of counties, with an entry for each day since the pandemic began
     * 
     * @param county County name(s), separated by commas (e.g. &#x27;Alameda, Humboldt&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return ApiResponse&lt;CovidNYTCounty&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidNYTCounty> v3Covid19NytCountiesCountyGetWithHttpInfo(String county, String lastdays) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19NytCountiesCountyGetValidateBeforeCall(county, lastdays, null, null);
        Type localVarReturnType = new TypeToken<CovidNYTCounty>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 time series data for a county or set of counties, with an entry for each day since the pandemic began (asynchronously)
     * 
     * @param county County name(s), separated by commas (e.g. &#x27;Alameda, Humboldt&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytCountiesCountyGetAsync(String county, String lastdays, final ApiCallback<CovidNYTCounty> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19NytCountiesCountyGetValidateBeforeCall(county, lastdays, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidNYTCounty>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19NytCountiesGet
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytCountiesGetCall(String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/nyt/counties";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (lastdays != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lastdays", lastdays));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19NytCountiesGetValidateBeforeCall(String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19NytCountiesGetCall(lastdays, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 time series data for all available US counties, with an entry for each day since the pandemic began
     * 
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return CovidNYTCounty
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidNYTCounty v3Covid19NytCountiesGet(String lastdays) throws ApiException {
        ApiResponse<CovidNYTCounty> resp = v3Covid19NytCountiesGetWithHttpInfo(lastdays);
        return resp.getData();
    }

    /**
     * Get COVID-19 time series data for all available US counties, with an entry for each day since the pandemic began
     * 
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return ApiResponse&lt;CovidNYTCounty&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidNYTCounty> v3Covid19NytCountiesGetWithHttpInfo(String lastdays) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19NytCountiesGetValidateBeforeCall(lastdays, null, null);
        Type localVarReturnType = new TypeToken<CovidNYTCounty>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 time series data for all available US counties, with an entry for each day since the pandemic began (asynchronously)
     * 
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytCountiesGetAsync(String lastdays, final ApiCallback<CovidNYTCounty> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19NytCountiesGetValidateBeforeCall(lastdays, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidNYTCounty>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19NytStatesGet
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytStatesGetCall(String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/nyt/states";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (lastdays != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lastdays", lastdays));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19NytStatesGetValidateBeforeCall(String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19NytStatesGetCall(lastdays, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 time series data for all states, with an entry for each day since the pandemic began
     * 
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return CovidNYTState
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidNYTState v3Covid19NytStatesGet(String lastdays) throws ApiException {
        ApiResponse<CovidNYTState> resp = v3Covid19NytStatesGetWithHttpInfo(lastdays);
        return resp.getData();
    }

    /**
     * Get COVID-19 time series data for all states, with an entry for each day since the pandemic began
     * 
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return ApiResponse&lt;CovidNYTState&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidNYTState> v3Covid19NytStatesGetWithHttpInfo(String lastdays) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19NytStatesGetValidateBeforeCall(lastdays, null, null);
        Type localVarReturnType = new TypeToken<CovidNYTState>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 time series data for all states, with an entry for each day since the pandemic began (asynchronously)
     * 
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytStatesGetAsync(String lastdays, final ApiCallback<CovidNYTState> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19NytStatesGetValidateBeforeCall(lastdays, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidNYTState>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19NytStatesStateGet
     * @param state State name(s), separated by commas (e.g. &#x27;Illinois, California&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytStatesStateGetCall(String state, String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/nyt/states/{state}"
            .replaceAll("\\{" + "state" + "\\}", apiClient.escapeString(state.toString()));

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (lastdays != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lastdays", lastdays));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19NytStatesStateGetValidateBeforeCall(String state, String lastdays, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'state' is set
        if (state == null) {
            throw new ApiException("Missing the required parameter 'state' when calling v3Covid19NytStatesStateGet(Async)");
        }
        
        com.squareup.okhttp.Call call = v3Covid19NytStatesStateGetCall(state, lastdays, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 time series data for a state or set of states, with an entry for each day since the pandemic began
     * 
     * @param state State name(s), separated by commas (e.g. &#x27;Illinois, California&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return CovidNYTState
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidNYTState v3Covid19NytStatesStateGet(String state, String lastdays) throws ApiException {
        ApiResponse<CovidNYTState> resp = v3Covid19NytStatesStateGetWithHttpInfo(state, lastdays);
        return resp.getData();
    }

    /**
     * Get COVID-19 time series data for a state or set of states, with an entry for each day since the pandemic began
     * 
     * @param state State name(s), separated by commas (e.g. &#x27;Illinois, California&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @return ApiResponse&lt;CovidNYTState&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidNYTState> v3Covid19NytStatesStateGetWithHttpInfo(String state, String lastdays) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19NytStatesStateGetValidateBeforeCall(state, lastdays, null, null);
        Type localVarReturnType = new TypeToken<CovidNYTState>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 time series data for a state or set of states, with an entry for each day since the pandemic began (asynchronously)
     * 
     * @param state State name(s), separated by commas (e.g. &#x27;Illinois, California&#x27;) (required)
     * @param lastdays Number of days to return. Use &#x27;all&#x27; for the full data set (e.g. 15, all, 24) (optional, default to 30)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytStatesStateGetAsync(String state, String lastdays, final ApiCallback<CovidNYTState> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19NytStatesStateGetValidateBeforeCall(state, lastdays, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidNYTState>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19NytUsaGet
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytUsaGetCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/nyt/usa";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19NytUsaGetValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19NytUsaGetCall(progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 time series data for the entire USA, with an entry for each day since the pandemic began
     * 
     * @return CovidNYTUSA
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidNYTUSA v3Covid19NytUsaGet() throws ApiException {
        ApiResponse<CovidNYTUSA> resp = v3Covid19NytUsaGetWithHttpInfo();
        return resp.getData();
    }

    /**
     * Get COVID-19 time series data for the entire USA, with an entry for each day since the pandemic began
     * 
     * @return ApiResponse&lt;CovidNYTUSA&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidNYTUSA> v3Covid19NytUsaGetWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19NytUsaGetValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<CovidNYTUSA>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 time series data for the entire USA, with an entry for each day since the pandemic began (asynchronously)
     * 
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19NytUsaGetAsync(final ApiCallback<CovidNYTUSA> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19NytUsaGetValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidNYTUSA>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
