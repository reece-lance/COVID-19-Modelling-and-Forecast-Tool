/*
 * disease.sh Docs - An open API for disease-related statistics
 * Third Party API for reliable global disease information
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.apiPackage;

import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiCallback;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiClient;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiException;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ApiResponse;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.Configuration;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.Pair;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ProgressRequestBody;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.invokerPackage.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidAll;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidContinent;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidContinents;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidCountries;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidCountry;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidState;
import csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model.CovidStates;

import java.lang.reflect.Type;

public class Covid19WorldometersApi {
    private ApiClient apiClient;

    public Covid19WorldometersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public Covid19WorldometersApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for v3Covid19AllGet
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19AllGetCall(String yesterday, String twoDaysAgo, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/all";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (twoDaysAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twoDaysAgo", twoDaysAgo));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19AllGetValidateBeforeCall(String yesterday, String twoDaysAgo, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19AllGetCall(yesterday, twoDaysAgo, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get global COVID-19 totals for today, yesterday and two days ago
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidAll
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidAll v3Covid19AllGet(String yesterday, String twoDaysAgo, String allowNull) throws ApiException {
        ApiResponse<CovidAll> resp = v3Covid19AllGetWithHttpInfo(yesterday, twoDaysAgo, allowNull);
        return resp.getData();
    }

    /**
     * Get global COVID-19 totals for today, yesterday and two days ago
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidAll&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidAll> v3Covid19AllGetWithHttpInfo(String yesterday, String twoDaysAgo, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19AllGetValidateBeforeCall(yesterday, twoDaysAgo, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidAll>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get global COVID-19 totals for today, yesterday and two days ago (asynchronously)
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19AllGetAsync(String yesterday, String twoDaysAgo, String allowNull, final ApiCallback<CovidAll> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19AllGetValidateBeforeCall(yesterday, twoDaysAgo, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidAll>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19ContinentsContinentGet
     * @param continent Continent name (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search continents (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19ContinentsContinentGetCall(String continent, String yesterday, String twoDaysAgo, String strict, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/continents/{continent}"
            .replaceAll("\\{" + "continent" + "\\}", apiClient.escapeString(continent.toString()));

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (twoDaysAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twoDaysAgo", twoDaysAgo));
        if (strict != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("strict", strict));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19ContinentsContinentGetValidateBeforeCall(String continent, String yesterday, String twoDaysAgo, String strict, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'continent' is set
        if (continent == null) {
            throw new ApiException("Missing the required parameter 'continent' when calling v3Covid19ContinentsContinentGet(Async)");
        }
        
        com.squareup.okhttp.Call call = v3Covid19ContinentsContinentGetCall(continent, yesterday, twoDaysAgo, strict, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for a specific continent
     * 
     * @param continent Continent name (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search continents (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidContinent
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidContinent v3Covid19ContinentsContinentGet(String continent, String yesterday, String twoDaysAgo, String strict, String allowNull) throws ApiException {
        ApiResponse<CovidContinent> resp = v3Covid19ContinentsContinentGetWithHttpInfo(continent, yesterday, twoDaysAgo, strict, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for a specific continent
     * 
     * @param continent Continent name (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search continents (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidContinent&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidContinent> v3Covid19ContinentsContinentGetWithHttpInfo(String continent, String yesterday, String twoDaysAgo, String strict, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19ContinentsContinentGetValidateBeforeCall(continent, yesterday, twoDaysAgo, strict, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidContinent>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for a specific continent (asynchronously)
     * 
     * @param continent Continent name (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search continents (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19ContinentsContinentGetAsync(String continent, String yesterday, String twoDaysAgo, String strict, String allowNull, final ApiCallback<CovidContinent> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19ContinentsContinentGetValidateBeforeCall(continent, yesterday, twoDaysAgo, strict, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidContinent>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19ContinentsGet
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), results will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19ContinentsGetCall(String yesterday, String twoDaysAgo, String sort, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/continents";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (twoDaysAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twoDaysAgo", twoDaysAgo));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sort", sort));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19ContinentsGetValidateBeforeCall(String yesterday, String twoDaysAgo, String sort, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19ContinentsGetCall(yesterday, twoDaysAgo, sort, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for all continents
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), results will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidContinents
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidContinents v3Covid19ContinentsGet(String yesterday, String twoDaysAgo, String sort, String allowNull) throws ApiException {
        ApiResponse<CovidContinents> resp = v3Covid19ContinentsGetWithHttpInfo(yesterday, twoDaysAgo, sort, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for all continents
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), results will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidContinents&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidContinents> v3Covid19ContinentsGetWithHttpInfo(String yesterday, String twoDaysAgo, String sort, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19ContinentsGetValidateBeforeCall(yesterday, twoDaysAgo, sort, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidContinents>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for all continents (asynchronously)
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), results will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19ContinentsGetAsync(String yesterday, String twoDaysAgo, String sort, String allowNull, final ApiCallback<CovidContinents> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19ContinentsGetValidateBeforeCall(yesterday, twoDaysAgo, sort, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidContinents>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19CountriesCountriesGet
     * @param countries Multiple country names, iso2, iso3, or country IDs separated by commas (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19CountriesCountriesGetCall(String countries, String yesterday, String twoDaysAgo, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/countries/{countries}"
            .replaceAll("\\{" + "countries" + "\\}", apiClient.escapeString(countries.toString()));

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (twoDaysAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twoDaysAgo", twoDaysAgo));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19CountriesCountriesGetValidateBeforeCall(String countries, String yesterday, String twoDaysAgo, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'countries' is set
        if (countries == null) {
            throw new ApiException("Missing the required parameter 'countries' when calling v3Covid19CountriesCountriesGet(Async)");
        }
        
        com.squareup.okhttp.Call call = v3Covid19CountriesCountriesGetCall(countries, yesterday, twoDaysAgo, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for a specific set of countries
     * 
     * @param countries Multiple country names, iso2, iso3, or country IDs separated by commas (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidCountries
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidCountries v3Covid19CountriesCountriesGet(String countries, String yesterday, String twoDaysAgo, String allowNull) throws ApiException {
        ApiResponse<CovidCountries> resp = v3Covid19CountriesCountriesGetWithHttpInfo(countries, yesterday, twoDaysAgo, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for a specific set of countries
     * 
     * @param countries Multiple country names, iso2, iso3, or country IDs separated by commas (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidCountries&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidCountries> v3Covid19CountriesCountriesGetWithHttpInfo(String countries, String yesterday, String twoDaysAgo, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19CountriesCountriesGetValidateBeforeCall(countries, yesterday, twoDaysAgo, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidCountries>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for a specific set of countries (asynchronously)
     * 
     * @param countries Multiple country names, iso2, iso3, or country IDs separated by commas (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19CountriesCountriesGetAsync(String countries, String yesterday, String twoDaysAgo, String allowNull, final ApiCallback<CovidCountries> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19CountriesCountriesGetValidateBeforeCall(countries, yesterday, twoDaysAgo, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidCountries>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19CountriesCountryGet
     * @param country A country name, iso2, iso3, or country ID code (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search countries (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19CountriesCountryGetCall(String country, String yesterday, String twoDaysAgo, String strict, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/countries/{country}"
            .replaceAll("\\{" + "country" + "\\}", apiClient.escapeString(country.toString()));

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (twoDaysAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twoDaysAgo", twoDaysAgo));
        if (strict != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("strict", strict));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19CountriesCountryGetValidateBeforeCall(String country, String yesterday, String twoDaysAgo, String strict, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'country' is set
        if (country == null) {
            throw new ApiException("Missing the required parameter 'country' when calling v3Covid19CountriesCountryGet(Async)");
        }
        
        com.squareup.okhttp.Call call = v3Covid19CountriesCountryGetCall(country, yesterday, twoDaysAgo, strict, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for a specific country
     * 
     * @param country A country name, iso2, iso3, or country ID code (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search countries (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidCountry
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidCountry v3Covid19CountriesCountryGet(String country, String yesterday, String twoDaysAgo, String strict, String allowNull) throws ApiException {
        ApiResponse<CovidCountry> resp = v3Covid19CountriesCountryGetWithHttpInfo(country, yesterday, twoDaysAgo, strict, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for a specific country
     * 
     * @param country A country name, iso2, iso3, or country ID code (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search countries (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidCountry&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidCountry> v3Covid19CountriesCountryGetWithHttpInfo(String country, String yesterday, String twoDaysAgo, String strict, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19CountriesCountryGetValidateBeforeCall(country, yesterday, twoDaysAgo, strict, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidCountry>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for a specific country (asynchronously)
     * 
     * @param country A country name, iso2, iso3, or country ID code (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param strict Setting to false gives you the ability to fuzzy search countries (i.e. Oman vs. rOMANia) (optional, default to true)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19CountriesCountryGetAsync(String country, String yesterday, String twoDaysAgo, String strict, String allowNull, final ApiCallback<CovidCountry> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19CountriesCountryGetValidateBeforeCall(country, yesterday, twoDaysAgo, strict, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidCountry>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19CountriesGet
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), the result will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19CountriesGetCall(String yesterday, String twoDaysAgo, String sort, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/countries";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (twoDaysAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twoDaysAgo", twoDaysAgo));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sort", sort));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19CountriesGetValidateBeforeCall(String yesterday, String twoDaysAgo, String sort, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19CountriesGetCall(yesterday, twoDaysAgo, sort, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for all countries
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), the result will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidCountries
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidCountries v3Covid19CountriesGet(String yesterday, String twoDaysAgo, String sort, String allowNull) throws ApiException {
        ApiResponse<CovidCountries> resp = v3Covid19CountriesGetWithHttpInfo(yesterday, twoDaysAgo, sort, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for all countries
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), the result will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidCountries&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidCountries> v3Covid19CountriesGetWithHttpInfo(String yesterday, String twoDaysAgo, String sort, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19CountriesGetValidateBeforeCall(yesterday, twoDaysAgo, sort, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidCountries>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for all countries (asynchronously)
     * 
     * @param yesterday Queries data reported a day ago (optional)
     * @param twoDaysAgo Queries data reported two days ago (optional)
     * @param sort Provided a key (e.g. cases, todayCases, deaths, recovered, active), the result will be sorted from greatest to least (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19CountriesGetAsync(String yesterday, String twoDaysAgo, String sort, String allowNull, final ApiCallback<CovidCountries> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19CountriesGetValidateBeforeCall(yesterday, twoDaysAgo, sort, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidCountries>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19StatesGet
     * @param sort Provided a key (e.g. cases, todayCases, deaths, active), result will be sorted from greatest to least (optional)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19StatesGetCall(String sort, String yesterday, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/states";

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sort", sort));
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19StatesGetValidateBeforeCall(String sort, String yesterday, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = v3Covid19StatesGetCall(sort, yesterday, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for all US States
     * 
     * @param sort Provided a key (e.g. cases, todayCases, deaths, active), result will be sorted from greatest to least (optional)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidStates
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidStates v3Covid19StatesGet(String sort, String yesterday, String allowNull) throws ApiException {
        ApiResponse<CovidStates> resp = v3Covid19StatesGetWithHttpInfo(sort, yesterday, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for all US States
     * 
     * @param sort Provided a key (e.g. cases, todayCases, deaths, active), result will be sorted from greatest to least (optional)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidStates&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidStates> v3Covid19StatesGetWithHttpInfo(String sort, String yesterday, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19StatesGetValidateBeforeCall(sort, yesterday, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidStates>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for all US States (asynchronously)
     * 
     * @param sort Provided a key (e.g. cases, todayCases, deaths, active), result will be sorted from greatest to least (optional)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19StatesGetAsync(String sort, String yesterday, String allowNull, final ApiCallback<CovidStates> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19StatesGetValidateBeforeCall(sort, yesterday, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidStates>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for v3Covid19StatesStatesGet
     * @param states State name or comma separated names spelled correctly (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v3Covid19StatesStatesGetCall(String states, String yesterday, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v3/covid-19/states/{states}"
            .replaceAll("\\{" + "states" + "\\}", apiClient.escapeString(states.toString()));

        java.util.List<Pair> localVarQueryParams = new java.util.ArrayList<Pair>();
        java.util.List<Pair> localVarCollectionQueryParams = new java.util.ArrayList<Pair>();
        if (yesterday != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("yesterday", yesterday));
        if (allowNull != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("allowNull", allowNull));

        java.util.Map<String, String> localVarHeaderParams = new java.util.HashMap<String, String>();

        java.util.Map<String, Object> localVarFormParams = new java.util.HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v3Covid19StatesStatesGetValidateBeforeCall(String states, String yesterday, String allowNull, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'states' is set
        if (states == null) {
            throw new ApiException("Missing the required parameter 'states' when calling v3Covid19StatesStatesGet(Async)");
        }
        
        com.squareup.okhttp.Call call = v3Covid19StatesStatesGetCall(states, yesterday, allowNull, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get COVID-19 totals for specific US State(s)
     * 
     * @param states State name or comma separated names spelled correctly (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return CovidState
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CovidState v3Covid19StatesStatesGet(String states, String yesterday, String allowNull) throws ApiException {
        ApiResponse<CovidState> resp = v3Covid19StatesStatesGetWithHttpInfo(states, yesterday, allowNull);
        return resp.getData();
    }

    /**
     * Get COVID-19 totals for specific US State(s)
     * 
     * @param states State name or comma separated names spelled correctly (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @return ApiResponse&lt;CovidState&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CovidState> v3Covid19StatesStatesGetWithHttpInfo(String states, String yesterday, String allowNull) throws ApiException {
        com.squareup.okhttp.Call call = v3Covid19StatesStatesGetValidateBeforeCall(states, yesterday, allowNull, null, null);
        Type localVarReturnType = new TypeToken<CovidState>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get COVID-19 totals for specific US State(s) (asynchronously)
     * 
     * @param states State name or comma separated names spelled correctly (required)
     * @param yesterday Queries data reported a day ago (optional)
     * @param allowNull By default, if a value is missing, it is returned as 0. This allows nulls to be returned (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v3Covid19StatesStatesGetAsync(String states, String yesterday, String allowNull, final ApiCallback<CovidState> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v3Covid19StatesStatesGetValidateBeforeCall(states, yesterday, allowNull, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CovidState>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
