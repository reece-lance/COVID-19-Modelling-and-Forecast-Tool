/*
 * disease.sh Docs - An open API for disease-related statistics
 * Third Party API for reliable global disease information
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.time.LocalDate;
/**
 * CovidAppleDataData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-02-12T19:32:54.804Z[Europe/London]")
public class CovidAppleDataData {
  @SerializedName("sub-region")
  private String subRegion = null;

  @SerializedName("subregion_and_city")
  private String subregionAndCity = null;

  @SerializedName("geo_type")
  private String geoType = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("driving")
  private BigDecimal driving = null;

  @SerializedName("transit")
  private BigDecimal transit = null;

  @SerializedName("walking")
  private BigDecimal walking = null;

  public CovidAppleDataData subRegion(String subRegion) {
    this.subRegion = subRegion;
    return this;
  }

   /**
   * Get subRegion
   * @return subRegion
  **/
  @Schema(description = "")
  public String getSubRegion() {
    return subRegion;
  }

  public void setSubRegion(String subRegion) {
    this.subRegion = subRegion;
  }

  public CovidAppleDataData subregionAndCity(String subregionAndCity) {
    this.subregionAndCity = subregionAndCity;
    return this;
  }

   /**
   * Get subregionAndCity
   * @return subregionAndCity
  **/
  @Schema(description = "")
  public String getSubregionAndCity() {
    return subregionAndCity;
  }

  public void setSubregionAndCity(String subregionAndCity) {
    this.subregionAndCity = subregionAndCity;
  }

  public CovidAppleDataData geoType(String geoType) {
    this.geoType = geoType;
    return this;
  }

   /**
   * Get geoType
   * @return geoType
  **/
  @Schema(description = "")
  public String getGeoType() {
    return geoType;
  }

  public void setGeoType(String geoType) {
    this.geoType = geoType;
  }

  public CovidAppleDataData date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public CovidAppleDataData driving(BigDecimal driving) {
    this.driving = driving;
    return this;
  }

   /**
   * Get driving
   * @return driving
  **/
  @Schema(description = "")
  public BigDecimal getDriving() {
    return driving;
  }

  public void setDriving(BigDecimal driving) {
    this.driving = driving;
  }

  public CovidAppleDataData transit(BigDecimal transit) {
    this.transit = transit;
    return this;
  }

   /**
   * Get transit
   * @return transit
  **/
  @Schema(description = "")
  public BigDecimal getTransit() {
    return transit;
  }

  public void setTransit(BigDecimal transit) {
    this.transit = transit;
  }

  public CovidAppleDataData walking(BigDecimal walking) {
    this.walking = walking;
    return this;
  }

   /**
   * Get walking
   * @return walking
  **/
  @Schema(description = "")
  public BigDecimal getWalking() {
    return walking;
  }

  public void setWalking(BigDecimal walking) {
    this.walking = walking;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CovidAppleDataData covidAppleDataData = (CovidAppleDataData) o;
    return Objects.equals(this.subRegion, covidAppleDataData.subRegion) &&
        Objects.equals(this.subregionAndCity, covidAppleDataData.subregionAndCity) &&
        Objects.equals(this.geoType, covidAppleDataData.geoType) &&
        Objects.equals(this.date, covidAppleDataData.date) &&
        Objects.equals(this.driving, covidAppleDataData.driving) &&
        Objects.equals(this.transit, covidAppleDataData.transit) &&
        Objects.equals(this.walking, covidAppleDataData.walking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subRegion, subregionAndCity, geoType, date, driving, transit, walking);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CovidAppleDataData {\n");
    
    sb.append("    subRegion: ").append(toIndentedString(subRegion)).append("\n");
    sb.append("    subregionAndCity: ").append(toIndentedString(subregionAndCity)).append("\n");
    sb.append("    geoType: ").append(toIndentedString(geoType)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    driving: ").append(toIndentedString(driving)).append("\n");
    sb.append("    transit: ").append(toIndentedString(transit)).append("\n");
    sb.append("    walking: ").append(toIndentedString(walking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
