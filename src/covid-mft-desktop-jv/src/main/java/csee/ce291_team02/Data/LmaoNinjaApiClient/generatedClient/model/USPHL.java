/*
 * disease.sh Docs - An open API for disease-related statistics
 * Third Party API for reliable global disease information
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package csee.ce291_team02.Data.LmaoNinjaApiClient.generatedClient.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
/**
 * USPHL
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-02-12T19:32:54.804Z[Europe/London]")
public class USPHL {
  @SerializedName("week")
  private String week = null;

  @SerializedName("A(H3N2v)")
  private BigDecimal aH3N2v = null;

  @SerializedName("A(H1N1)")
  private BigDecimal aH1N1 = null;

  @SerializedName("A(H3)")
  private BigDecimal aH3 = null;

  @SerializedName("A(unable to sub-type)+")
  private BigDecimal aUnableToSubType = null;

  @SerializedName("A(Subtyping not performed)")
  private BigDecimal aSubtypingNotPerformed = null;

  @SerializedName("B")
  private BigDecimal B = null;

  @SerializedName("BVIC")
  private BigDecimal BVIC = null;

  @SerializedName("totalTests")
  private BigDecimal totalTests = null;

  public USPHL week(String week) {
    this.week = week;
    return this;
  }

   /**
   * Get week
   * @return week
  **/
  @Schema(description = "")
  public String getWeek() {
    return week;
  }

  public void setWeek(String week) {
    this.week = week;
  }

  public USPHL aH3N2v(BigDecimal aH3N2v) {
    this.aH3N2v = aH3N2v;
    return this;
  }

   /**
   * Get aH3N2v
   * @return aH3N2v
  **/
  @Schema(description = "")
  public BigDecimal getAH3N2v() {
    return aH3N2v;
  }

  public void setAH3N2v(BigDecimal aH3N2v) {
    this.aH3N2v = aH3N2v;
  }

  public USPHL aH1N1(BigDecimal aH1N1) {
    this.aH1N1 = aH1N1;
    return this;
  }

   /**
   * Get aH1N1
   * @return aH1N1
  **/
  @Schema(description = "")
  public BigDecimal getAH1N1() {
    return aH1N1;
  }

  public void setAH1N1(BigDecimal aH1N1) {
    this.aH1N1 = aH1N1;
  }

  public USPHL aH3(BigDecimal aH3) {
    this.aH3 = aH3;
    return this;
  }

   /**
   * Get aH3
   * @return aH3
  **/
  @Schema(description = "")
  public BigDecimal getAH3() {
    return aH3;
  }

  public void setAH3(BigDecimal aH3) {
    this.aH3 = aH3;
  }

  public USPHL aUnableToSubType(BigDecimal aUnableToSubType) {
    this.aUnableToSubType = aUnableToSubType;
    return this;
  }

   /**
   * Get aUnableToSubType
   * @return aUnableToSubType
  **/
  @Schema(description = "")
  public BigDecimal getAUnableToSubType() {
    return aUnableToSubType;
  }

  public void setAUnableToSubType(BigDecimal aUnableToSubType) {
    this.aUnableToSubType = aUnableToSubType;
  }

  public USPHL aSubtypingNotPerformed(BigDecimal aSubtypingNotPerformed) {
    this.aSubtypingNotPerformed = aSubtypingNotPerformed;
    return this;
  }

   /**
   * Get aSubtypingNotPerformed
   * @return aSubtypingNotPerformed
  **/
  @Schema(description = "")
  public BigDecimal getASubtypingNotPerformed() {
    return aSubtypingNotPerformed;
  }

  public void setASubtypingNotPerformed(BigDecimal aSubtypingNotPerformed) {
    this.aSubtypingNotPerformed = aSubtypingNotPerformed;
  }

  public USPHL B(BigDecimal B) {
    this.B = B;
    return this;
  }

   /**
   * Get B
   * @return B
  **/
  @Schema(description = "")
  public BigDecimal getB() {
    return B;
  }

  public void setB(BigDecimal B) {
    this.B = B;
  }

  public USPHL BVIC(BigDecimal BVIC) {
    this.BVIC = BVIC;
    return this;
  }

   /**
   * Get BVIC
   * @return BVIC
  **/
  @Schema(description = "")
  public BigDecimal getBVIC() {
    return BVIC;
  }

  public void setBVIC(BigDecimal BVIC) {
    this.BVIC = BVIC;
  }

  public USPHL totalTests(BigDecimal totalTests) {
    this.totalTests = totalTests;
    return this;
  }

   /**
   * Get totalTests
   * @return totalTests
  **/
  @Schema(description = "")
  public BigDecimal getTotalTests() {
    return totalTests;
  }

  public void setTotalTests(BigDecimal totalTests) {
    this.totalTests = totalTests;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    USPHL USPHL = (USPHL) o;
    return Objects.equals(this.week, USPHL.week) &&
        Objects.equals(this.aH3N2v, USPHL.aH3N2v) &&
        Objects.equals(this.aH1N1, USPHL.aH1N1) &&
        Objects.equals(this.aH3, USPHL.aH3) &&
        Objects.equals(this.aUnableToSubType, USPHL.aUnableToSubType) &&
        Objects.equals(this.aSubtypingNotPerformed, USPHL.aSubtypingNotPerformed) &&
        Objects.equals(this.B, USPHL.B) &&
        Objects.equals(this.BVIC, USPHL.BVIC) &&
        Objects.equals(this.totalTests, USPHL.totalTests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(week, aH3N2v, aH1N1, aH3, aUnableToSubType, aSubtypingNotPerformed, B, BVIC, totalTests);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class USPHL {\n");
    
    sb.append("    week: ").append(toIndentedString(week)).append("\n");
    sb.append("    aH3N2v: ").append(toIndentedString(aH3N2v)).append("\n");
    sb.append("    aH1N1: ").append(toIndentedString(aH1N1)).append("\n");
    sb.append("    aH3: ").append(toIndentedString(aH3)).append("\n");
    sb.append("    aUnableToSubType: ").append(toIndentedString(aUnableToSubType)).append("\n");
    sb.append("    aSubtypingNotPerformed: ").append(toIndentedString(aSubtypingNotPerformed)).append("\n");
    sb.append("    B: ").append(toIndentedString(B)).append("\n");
    sb.append("    BVIC: ").append(toIndentedString(BVIC)).append("\n");
    sb.append("    totalTests: ").append(toIndentedString(totalTests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
